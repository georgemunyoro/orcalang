ProgramNode [1:0 - 6:0] void
  FunctionDeclarationNode main [1:0 - 5:0] () -> u32
     ->  TypeNode [1:15 - 1:15] 'u32' u32
    CompoundStatementNode [1:19 - 5:0] void
      ExpressionStatementNode [2:4 - 2:30] 'leta:u32=1>2?3:4;' void
        AssignmentExpressionNode [2:4 - 2:29] 'leta:u32=1>2?3:4' u32
          LetExpressionNode a [2:4 - 2:11] 'leta:u32' u32
            TypeNode [2:11 - 2:11] 'u32' u32
          ConditionalExpressionNode [2:17 - 2:29] '1>2?3:4' u32
            BinaryExpressionNode > [2:17 - 2:21] '1>2' bool
              IntegerLiteralExpressionNode 1 [2:17 - 2:17] u32
              IntegerLiteralExpressionNode 2 [2:21 - 2:21] u32
            IntegerLiteralExpressionNode 3 [2:25 - 2:25] u32
            IntegerLiteralExpressionNode 4 [2:29 - 2:29] u32
      ExpressionStatementNode [3:4 - 3:30] 'letb:u32=1>2?5:6;' void
        AssignmentExpressionNode [3:4 - 3:29] 'letb:u32=1>2?5:6' u32
          LetExpressionNode b [3:4 - 3:11] 'letb:u32' u32
            TypeNode [3:11 - 3:11] 'u32' u32
          ConditionalExpressionNode [3:17 - 3:29] '1>2?5:6' u32
            BinaryExpressionNode > [3:17 - 3:21] '1>2' bool
              IntegerLiteralExpressionNode 1 [3:17 - 3:17] u32
              IntegerLiteralExpressionNode 2 [3:21 - 3:21] u32
            IntegerLiteralExpressionNode 5 [3:25 - 3:25] u32
            IntegerLiteralExpressionNode 6 [3:29 - 3:29] u32
      JumpStatementNode return [4:4 - 4:16] 'returna+b;' void
        BinaryExpressionNode + [4:11 - 4:15] 'a+b' u32
          IdentifierExpressionNode a [4:11 - 4:11] 'a' u32
          IdentifierExpressionNode b [4:15 - 4:15] 'b' u32

